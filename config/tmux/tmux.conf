#
# # Tmux Configuration
#


#
# ## Tmux Settings
#

# enable utf-8 on status bar
set -g status on
set -g status-utf8 on

# Rebind PREFIX to C-a, for Koding
set-option -g prefix C-a

# Sets my default shell to fish. Yummy.
#set-option -g default-shell /usr/bin/fish
set-option -g default-command /usr/bin/fish

# Set the base index. We're using zero for IRC / static
set -g base-index 0

# Vi copypaste mode, also used with keybinds below
set-window-option -g mode-keys vi

# Screen Color
set -g default-terminal "screen-256color"


#
# ## Add some Keybinds
#

# Send prefix!
#
# The send prefix is the command used to pass the prefix command through to
# inner windows. Primarily useful for when i am SSH'd into Koding and need to
# pass commands in. Ctrl-S might be a bad choice, we'll see, but i want it to
# be close to the main prefix key. Normally you would use the same prefix key
# but i have chosen prefix-prefix to mean toggle recent window thing.
# This is a bit of a mindfuck, so it's worth noting.
bind C-q send-prefix

# These two allow me to easily detach all other clients, which happens quite
# a bit on Koding since a connection loss can result in a GNU Screen floating
# around for quite a while.
bind C-d attach -d

# Easily navigate to the last window it C-a C-a
bind C-a last-window

# Vi copypaste mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Switch panes. Emulating the Vim binding
bind C-w select-pane -t :.+

# Close pane. Emulating the Vim binding
bind C-c confirm-before -p "kill-pane #P? (y/n)" kill-pane

# Split vertical and horizontal. Emulating the Vim bindings
bind C-s split-window -c '#{pane_current_path}'
bind C-v split-window -h -c '#{pane_current_path}'

# Reload this config easily
bind C-r source-file ~/.tmux.conf \; display-message "Config reloaded"


#
# ## External Plugins
#


#
# ## Always a New Session
#
# Finally, when this config is read the first time by tmux-server, it will
# automatically create a new session. This means that if i run `tmux attach`
# even with no prior session, the server will start and create a session.
# This makes it possible for me to use `tmux attach` in my bash profile, so
# tmux always opens to my main session, for me. Yay!
new-session -s koding


# Enable Powerline
#
# *Warning, weird shit!*: Powerline seemed to be causing issues with any calls
# following it, so i moved it to the end. In this case, if
# `new-session -s koding` was after it then the `new-session` command
# was not being called. Quite odd, annoying, and confusing. Finally,
# i simply gave up and moved the powerline call to the end of the line.
#source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf


